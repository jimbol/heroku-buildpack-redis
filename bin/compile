#!/usr/bin/env bash

BUILD_DIR="$1"
CACHE_DIR="$2"
ENV_DIR="$3"

if [ ! -f "${ENV_DIR}/CUSTOM_GEMFILE" ]; then
  exit 0
fi

custom_gemfile="$(cat "${ENV_DIR}/CUSTOM_GEMFILE")"
custom_gemfile_lock="${custom_gemfile}.lock"

echo "-----> CUSTOM_GEMFILE detected: ${custom_gemfile}"

if [ "$custom_gemfile" == "Gemfile" ]; then
  echo "-----> ${custom_gemfile} is already the default, skipping" >&2
  exit 0
fi

cd "$BUILD_DIR"

if [ ! -f "$custom_gemfile" ]; then
  echo "-----> ${custom_gemfile} does not exist or is not a file" >&2
  exit 1
elif [ ! -f "$custom_gemfile_lock" ]; then
  echo "-----> ${custom_gemfile_lock} does not exist or is not a file" >&2
  exit 1
fi

temp_dir="$(mktemp -d)"

# Copy custom Gemfile/Gemfile.lock to temporary directory,
# in case it symlinks to the default Gemfile/Gemfile.lock.
cp -L "$custom_gemfile" "${temp_dir}/Gemfile"
cp -L "$custom_gemfile_lock" "${temp_dir}/Gemfile.lock"

# Back up existing Gemfile/Gemfile.lock.
if [ -f Gemfile ]; then
  echo "-----> Backing up Gemfile to Gemfile.orig"
  mv Gemfile Gemfile.orig
fi

if [ -f Gemfile.lock ]; then
  echo "-----> Backing up Gemfile.lock to Gemfile.orig.lock"
  mv Gemfile.lock Gemfile.orig.lock
fi

# Install custom Gemfile/Gemfile.lock.
mv "${temp_dir}/Gemfile" Gemfile
mv "${temp_dir}/Gemfile.lock" Gemfile.lock

echo "-----> Custom Gemfile installed"

rmdir "$temp_dir"

exit 0
